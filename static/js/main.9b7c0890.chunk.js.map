{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notifacation.jsx","AppHooks.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","handleClick","map","option","index","className","s","feedback__button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","AppHooks","useState","setGood","setNeutral","setBad","e","target","textContent","console","log","percentage","Math","round","positivePercentageCalculator","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,iBAAmB,4C,+ICCtB,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,qCACE,6BAAKD,IACJC,K,oBCHQ,SAASC,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YACjD,OACE,mCACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBACEC,UAAWC,IAAEC,iBAEbC,KAAK,SACLC,KAAMN,EACNO,QAAST,EALX,SAOGE,GALIC,QCPA,SAASO,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,UCbS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,mCACE,4BAAIA,MCEV,IAwDeC,EAxDE,WACf,IAEA,EAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KACMR,EAAQH,EAAOE,EAAMD,EAwB3B,OACE,sBAAKR,UAAU,MAAf,UACE,cAACT,EAAD,CAASC,MAAM,YAAf,SACE,cAACE,EAAD,CACEC,QAjCQ,CAAC,OAAQ,UAAW,OAkC5BC,YAvBY,SAAAuB,GAClB,IAAMf,EAAOe,EAAEC,OAAOC,YAEtB,OADAC,QAAQC,IAAInB,GACJA,GACN,IAAK,OACHY,GAAQ,SAAAT,GAAI,OAAIA,EAAO,KACvBe,QAAQC,IAAIhB,GACZ,MACF,IAAK,UACHU,GAAW,SAAAT,GAAO,OAAIA,EAAU,KAChC,MACF,IAAK,MACHU,GAAO,SAAAT,GAAG,OAAIA,EAAM,WAeX,IAAVC,EACC,cAACE,EAAD,CAAcC,QAAQ,sBAEtB,cAACtB,EAAD,CAASC,MAAM,aAAf,SACE,cAACc,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAxC2B,WACnC,IAAMa,EAAqB,IAAPjB,EAAcG,EAClC,OAAOe,KAAKC,MAAMF,GAsCUG,WCjDhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9b7c0890.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__button\":\"FeedbackOptions_feedback__button__3-9mu\"};","import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, handleClick }) {\r\n  return (\r\n    <>\r\n      {options.map((option, index) => (\r\n        <button\r\n          className={s.feedback__button}\r\n          key={index}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={handleClick}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <p>good:{good}</p>\r\n      <p>neutral:{neutral}</p>\r\n      <p>bad:{bad}</p>\r\n      <p>total:{total}</p>\r\n      <p>positive feedback:{positivePercentage}%</p>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Section from './Components/Section/Section';\r\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './Components/Statistics/Statistics';\r\nimport Notification from './Components/Notification/Notifacation';\r\n\r\nconst AppHooks = function () {\r\n  const options = ['good', 'neutral', 'bad'];\r\n\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const total = good + bad + neutral;\r\n\r\n  const positivePercentageCalculator = () => {\r\n    const percentage = (good * 100) / total;\r\n    return Math.round(percentage);\r\n  };\r\n  const handleClick = e => {\r\n    const name = e.target.textContent;\r\n    console.log(name);\r\n    switch (name) {\r\n      case 'good':\r\n        setGood(good => good + 1);\r\n        console.log(good);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(neutral => neutral + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(bad => bad + 1);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <Section title=\"Feedback:\">\r\n        <FeedbackOptions\r\n          options={options}\r\n          handleClick={handleClick}\r\n        ></FeedbackOptions>\r\n      </Section>\r\n\r\n      {total === 0 ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentageCalculator()}\r\n          ></Statistics>\r\n        </Section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHooks;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport AppHooks from './AppHooks';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppHooks />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}